1. new a local directory 
mkdir mygit

2. initial current directory as a repository
git init

3. edit a file test.txt, and add it to the stage(暂存区)
git add test.txt

4. put the file into the master(本地库)
git commit -m "comment_string"

5. check the status of git
git status

6. view the history of git
git log

7. view the history of the command
git reflog

8. reset the file to last version, HEAD表示当前版本，HEAD^表示上一版本，HEAD^^表示倒数第二个版本，HEAD-100表示倒数第100个版本，用XXXXXXX表示版本号
git reset --hard HEAD^ 
git reset --hard XXXXXXX

9. compare the difference between workspace and repository
git diff HEAD -- filename

10. undo the modification in the workspace, and keep it the same as the status of last command "git commit" or "git add"
git checkout -- filename

11. undo the modification in the stage(暂存区), and put the modification into the workspace
git reset HEAD filename

12. remove the file from the repository
git rm filename

13. new ssh key of your current repository
ssh-keygen -t rsa -C "youremail@example.com"

14. login your GitHub, and new a ssh key, then copy ".ssh/id_rsa.pub" from the local and paste it into the Key in the remote

15. connect local master with remote master, and push all the contents of your local master to the remote maste
git remote add origin git@github.com:yourGitHubAccount/GitHubRepositoryName
git push -u origin master

16. push only the modification to the remote master "origin"
git push origin master

17. clone a repository from the remote origin
git clone git@github.com:GitHubAccount/GitHubRepository

18. GitHub supports many protocals, default is "git://", it uses ssh to connect. GitHub also uses "https://", but it needs to input password every time.

19. 查看分支：git branch
    创建分支：git branch <name>
    切换分支：git checkout <name>
    创建+切换分支：git checkout -b <name>
    合并某分支到当前分支：git merge <name>
    删除分支：git branch -d <name>

